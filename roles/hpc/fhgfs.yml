#
# http://www.fhgfs.com/
#
# --extra-vars="master=fhgfs-01"
#
---
- hosts: all
  vars_files:
    - networks.yml
    - vars/fhgfs.yml

  tasks:
  - name: Download FhGFS release key
    get_url: url={{key_url}}/{{key}} dest=/root/fhgfs-release.asc
    tags:
      - packages
      - key

  - name: Install FhGFS release key
    shell: /bin/rpm --import /root/fhgfs-release.asc
    tags:
      - packages
      - key

  - name: Download FhGFS repo
    get_url: url={{url}}/{{repo}} dest=/etc/yum.repos.d/{{repo}}
    tags:
      - packages
      - repo

### ALL SERVERS
  - name: Install packages
    yum: name={{item}}
         state=installed
    with_items:
      - fhgfs-common
      - fhgfs-meta
      - fhgfs-storage
      - fhgfs-utils
      - fhgfs-opentk-lib
      - fhgfs-client
      - fhgfs-helperd
      - xfsprogs
      - kernel-devel
    tags:
      - packages

### MASTER SERVER
  - name: Install packages
    yum: name={{item}}
         state=installed
    with_items:
      - fhgfs-mgmtd
      - fhgfs-admon
      - java-1.6.0-openjdk
    when: inventory_hostname == master
    tags:
      - packages

### CRATE VG
  - name: Create fhgfs VG
    lvg: vg={{fhgfs.vg_root}}
         pvs={{fhgfs.vg_pvs}}
         pesize={{fhgfs.vg_size}}
    tags:
      - vg


### DATA PARTITION
# should run on storage nodes
  - name: Create data partition
    lvol: vg={{fhgfs.vg_root}}
          lv={{fhgfs.lv_data}}
          size={{fhgfs.lv_data_size}}
    ignore_errors: yes
    when: inventory_hostname != master
    tags:
      - data

  - name: Create fs for data
    filesystem: fstype=xfs
                dev=/dev/{{fhgfs.vg_root}}/{{fhgfs.lv_data}}
                opts="{{fhgfs.lv_data_opts}}"
    when: inventory_hostname != master
    tags:
      - data

  - name: Creat mount dir for data
    file: path={{fhgfs.lv_data_mnt}}
          state=directory
    when: inventory_hostname != master
    tags:
      - data

  - name: Mount data partition
    mount: name={{fhgfs.lv_data_mnt}}
           src=/dev/{{fhgfs.vg_root}}/{{fhgfs.lv_data}}
           fstype=xfs
           opts="{{fhgfs.data_opts}}"
           state=mounted
    when: inventory_hostname != master
    tags:
      - data


### META PARTITION
# should run on storage or meta nodes
  - name: Create meta partition
    lvol: vg={{fhgfs.vg_root}}
          lv={{fhgfs.lv_meta}}
          size={{fhgfs.lv_meta_size}}
    ignore_errors: yes
    when: inventory_hostname == master
    tags:
      - meta

  - name: Create fs for meta
    filesystem: fstype=ext4
                dev=/dev/{{fhgfs.vg_root}}/{{fhgfs.lv_meta}}
                opts="{{fhgfs.lv_meta_opts}}"
    when: inventory_hostname == master
    tags:
      - meta

  - name: Creat mount dir for meta
    file: path={{gluster.lv_meta_mnt}}
          state=directory
    when: inventory_hostname == master
    tags:
      - meta

  - name: Mount meta partition
    mount: name={{fhgfs.lv_meta_mnt}}
           src=/dev/{{fhgfs.vg_root}}/{{fhgfs.lv_meta}}
           fstype=ext4
           opts="{{fhgfs.meta_opts}}"
           state=mounted
    when: inventory_hostname == master
    tags:
      - meta


### SECURITY
# in production use separate and redundant storage network 10/100Ge or IB
  - name: Create connInterfacesFile
    copy: content={{fhgfs.interface}}
          dest=/etc/fhgfs/connInterfacesFile
    tags:
      - interfaces

  - name: Create connNetFilterFile
    copy: content={{networks.system}}/{{masks.system}}
          dest=/etc/fhgfs/connNetFilterFile
    tags:
      - netfilter


### MANAGEMENT SERVER
  - name: Create state directory
    file: path={{fhgfs.state}}
          owner=root
          group=root
          state=directory
    when: inventory_hostname == master
    tags:
      - state

  - name: Install mgmtd config
    template: src=templates/etc/fhgfs/fhgfs-mgmtd.conf.j2
              dest=/etc/fhgfs/fhgfs-mgmtd.conf
              backup=yes
    tags:
      - mgmt
    when: inventory_hostname == master
    notify:
      - Restart fhgfs-mgmtd


### METADATA SERVER
  - name: Install meta config
    template: src=templates/etc/fhgfs/fhgfs-meta.conf.j2
              dest=/etc/fhgfs/fhgfs-meta.conf
              backup=yes
    when: inventory_hostname == master
    tags:
      - meta
    notify:
      - Restart fhgfs-meta


#### STORAGE SERVER
  - name: Install storage config
    template: src=templates/etc/fhgfs/fhgfs-storage.conf.j2
              dest=/etc/fhgfs/fhgfs-storage.conf
              backup=yes
    when: inventory_hostname != master
    tags:
      - storage
    notify:
      - Restart fhgfs-storage


#### MONITOR SERVER
  - name: Install admon config
    template: src=templates/etc/fhgfs/fhgfs-admon.conf.j2
              dest=/etc/fhgfs/fhgfs-admon.conf
              backup=yes
    tags:
      - monitor
    when: inventory_hostname == master
    notify:
      - Restart fhgfs-admon


### CLIENTS
  - name: Create client mount directory
    file: path={{fhgfs.mount}}
          owner=root
          group=root
          state=directory
    tags:
      - client

  - name: Install client config
    template: src=templates/etc/fhgfs/fhgfs-client.conf.j2
              dest=/etc/fhgfs/fhgfs-client.conf
              backup=yes
    tags:
      - config
      - client
    notify:
      - Restart fhgfs-client


### SERVICES
  - name: Start master services
    service: name={{item}}
             state=started
             enabled=yes
    when: inventory_hostname == master
    with_items:
      - fhgfs-mgmtd
      - fhgfs-admon
      - fhgfs-meta
    tags:
      - services
      - master

  - name: Start storage services
    service: name={{item}}
             state=started
             enabled=yes
    with_items:
      - fhgfs-storage
    when: inventory_hostname != master
    tags:
      - services
      - slave


  - name: Start client services
    service: name={{item}}
             state=started
             enabled=yes
    with_items:
      - fhgfs-helperd
      - fhgfs-client
    tags:
      - services
      - client


### HANDLERS
  handlers:
    - name: Restart fhgfs-mgmtd
      service: name=fhgfs-mgmtd
               state=restarted

    - name: Restart fhgfs-meta
      service: name=fhgfs-meta
               state=restarted

    - name: Restart fhgfs-storage
      service: name=fhgfs-storage
               state=restarted

    - name: Restart fhgfs-admon
      service: name=fhgfs-admon
               state=restarted

    - name: Restart fhgfs-client
      service: name=fhgfs-client
               state=restarted
