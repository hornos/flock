#!/bin/bash
source $(dirname $0)/../lib/header
import inifile

# TBD: cs lib

### init
usrlocal=/usr
if [ ! -z "${OSTYPE/darwin/}" ]; then
  usrlocal=/usr/local
fi

cm="cloudmonkey -c ${CMONKEY_HOSTS}"

### main
cmd=${1:-help}
shift

# http://www.commandlinefu.com/commands/view/3584/remove-color-codes-special-characters-with-sed

# linux: sed -r "s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})*)?m//g"
# osx: sed -E "s/"$'\E'"\[([0-9]{1,2}(;[0-9]{1,2})*)?m//g"

### args
# http://xmodulo.com/2013/05/how-to-parse-json-string-via-command-line-on-linux.html
# 
case ${cmd} in
  #/* Generate Ansible inventory from CloudStack
  #// ip address of the first NIC is used
  #// inventory <NAME>
  inventory)
    name=${1:-test}
    inventory="./inventory/${name}.ansible"
    if test -r "${inventory}" ; then
      read -p "Overwrite inventory?"
    fi

    # list=$(${cm} list virtualmachines name=${name})
    # echo "${list}" | \
    # jq ".count"
    count=$(${cm} list virtualmachines name=${name} | \
            sed -E "s/"$'\E'"\[([0-9]{1,2}(;[0-9]{1,2})*)?m//g" | \
            grep 'count' | \
            grep -v account | \
            awk '{print $3}')

    echo "[${name}]" > ${inventory}
    for i in $(seq -f "%02g" 1 ${count}); do
      host=${name}-${i}
      ip=$(${cm} list virtualmachines name=${host} | \
           grep ipaddress | \
           awk '{print $3}' | \
           head -1 | \
           sed -E "s/"$'\E'"\[([0-9]{1,3}((;[0-9]{1,3})*)?)?[m|K]//g")
      echo "${host} ansible_ssh_host=${ip} ansible_connection=paramiko" >> ${inventory}
    done

    # ip=$(${cm} list virtualmachines name=${name} | \
    # grep ipaddress | awk '{print $3}' | \
    # sed -E "s/"$'\E'"\[([0-9]{1,3}((;[0-9]{1,3})*)?)?[m|K]//g")	
    # echo "[${name}]" > ${inventory}
    # echo "${fqdn} ansible_ssh_host=${ip} ansible_connection=paramiko" >> ${inventory}

  ;;

  #/* Mass deploy VMs
  #// internal names are: <NAME>-<COUNT>
  #// out <COUNT> <NAME>
  out)
    count=${1:-1}
    name=${2:-test}
    domain=${3}
    read_ini "${CMONKEY_HOSTS}"
    read -p "Deploy ${count} VMs?"

    for i in $(seq -f "%02g" 1 ${count}); do
      host=${name}-${i}
      if test -n "${domain}" ; then
        host=${host}.${domain}
      fi

      disk=""
      if test -n "${INI__defaultvm__diskofferingid}" ; then
        disk="diskofferingid=${INI__defaultvm__diskofferingid}"
      fi

      ${cm} deploy virtualmachine name=${host} displayname=${host} \
      zoneid=${INI__defaultvm__zoneid} \
      templateid=${INI__defaultvm__templateid} \
      serviceofferingid=${INI__defaultvm__serviceofferingid} \
      networkids=${INI__defaultvm__networkids} \
      ${disk}
      if test $? -gt 0; then
        echo "Failed to deploy VM: ${host}"
        exit 1
      fi
    done
  ;;

  *)
    help $0
  ;;
esac
